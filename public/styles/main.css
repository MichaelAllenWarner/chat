html {
  box-sizing: border-box;
  height: 100vh; /* fallback */
  height: calc(var(--vh, 1vh) * 100); /* (found on CSS Tricks) */
}

*, *:before, *:after {
  box-sizing: inherit;
}

body {
  background-color: lightblue;
  color: black;
  font-size: 16px;
  text-align: center;
  font-family: serif;
  margin: 0;
  height: 100%;
  display: flex;
  flex-direction: column;
  transition: all .2s;
  transition-property: background-color, color;
}

header {
  position: relative;
}

#menu-flex {
  display: flex;
  flex-direction: column;
  position: absolute;
  height: 100%;
}

#menu-logo {
  margin: auto 0 auto .2em;
  color: black;
  font-size: 2.5em;
  font-weight: bold;
  cursor: pointer;
  transition: color .2s;
}

#menu-logo:hover {
  color: gray;
}

#menu-logo:active {
  color: white;
}

#menu-wrapper {
  position: relative;
}

#menu {
  position: absolute;
  width: 300px;
  opacity: .9;
  text-align: left;
  transition: left .2s;
}

.menu-item {
  background-color: lightgray;
  color: black;
  font-size: 1.5em;
  padding-left: .25em;
  padding-top: .15em;
  padding-bottom: .15em;
  border-top: 1px solid black;
  border-left: 1px solid black;
  box-shadow: 1px 1px 1px black;
  cursor: pointer;
  transition: all .2s;
  transition-property: color, background-color, border-color, box-shadow;
}

.menu-item:hover {
  background-color: tan;
}

.menu-item:active {
  color: white;
}

.menu-out {
  left: -301px; /* must equal #menu width + .menu-item border */
  user-select: none;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}

.menu-in {
  left: 0;
}

h1 {
  margin: .5em auto;
  font-size: 2em;
}

h2 {
  font-size: 1.5em;
}

input {
  font-size: 16px;
  font-family: serif;
  background-color: white;
  color: black;
  transition: all .2s;
  transition-property: background-color, color;
}

#content-grid {
  display: grid;
  height: 100%;
  overflow: auto;
}

.content-wrapper {
  background-color: white;
  border: 1px solid black;
  display: flex;
  flex-direction: column;
  transition: all .2s;
  transition-property: background-color, border-color;
}

.viewer {
  overflow: auto;
  padding: 0 .5em;
  height: 100%;
  background-color: linen;
  border-top: 1px solid black;
  transition: all .2s;
  transition-property: background-color, border-color;
}

#messages-viewer {
  display: flex;
  flex-direction: column-reverse;
}

#messages {
  overflow: auto;
  white-space: pre-wrap;
  overflow-wrap: anywhere;
}

.other-message {
  text-align: left;
  padding-left: 1em;
  color: red;
  transition: color .2s;
}

.own-message {
  text-align: right;
  padding-right: 1em;
  color: blue;
  transition: color .2s;
}

.bottom-bar {
  padding: 1em 1em;
  border-top: 1px solid black;
  transition: border-color .2s;
}

#message-input {
  width: 60%;
}

#username-input {
  width: 50%;
}

span.username-prefix {
  font-weight: bold;
}

li {
  text-align: left;
  color: red;
  transition: color .2s;
}

#own-user {
  color: blue;
  transition: color .2s;
}

@keyframes bad-username-animation {
  from {color: black;}
  to {color: red;}
}

.bad-username {
  animation: .2s 4 alternate bad-username-animation;
}

@keyframes taken-username-animation {
  from {color: red;}
  to {color: black;}
}

.taken-username {
  animation: .2s 4 alternate taken-username-animation;
}



/* DARK MODE STYLES */

.dark-mode body {
  background-color: #1e2327;
  color: white;
}

.dark-mode #menu-logo {
  color: white;
}

.dark-mode #menu-logo:hover {
  color: gold;
}

.dark-mode #menu-logo:active {
  color: lightgray;
}

.dark-mode .menu-item {
  color: white;
  background-color: black;
  border-color: lightgray;
  box-shadow: 1px 1px 1px lightgray;
}

.dark-mode .menu-item:hover {
  background-color: slategray;
}

.dark-mode .menu-item:active {
  color: gold;
}

.dark-mode input {
  background-color: #505a63;
  color: white;
}

.dark-mode .content-wrapper {
  background-color: #2f3439;
  border-color: lightgray;
}

.dark-mode .viewer {
  background-color: #505a63;
  border-color: lightgray;
}

.dark-mode .other-message {
  color: gold;
}

.dark-mode .own-message {
  color: white;
}

.dark-mode .bottom-bar {
  border-color: lightgray;
}

.dark-mode li {
  color: gold;
}

.dark-mode #own-user {
  color: white;
}

@keyframes dark-mode-bad-username-animation {
  from {color: white;}
  to {color: gold;}
}

@keyframes dark-mode-taken-username-animation {
  from {color: gold;}
  to {color: white;}
}

.dark-mode .bad-username {
  animation: .2s 4 alternate dark-mode-bad-username-animation;
}

.dark-mode .taken-username {
  animation: .2s 4 alternate dark-mode-taken-username-animation;
}



/* MEDIA QUERIES*/

/* grid layout */

/* on wide window use columns */
@media screen and (min-width: 601px) {
  #content-grid {
    grid-template-columns: 60% 40%;
    grid-auto-rows: 100%;
    -ms-grid-columns: 60% 40%;
  }
}

/* on thin window, use rows */
@media screen and (max-width: 600px) {
  #content-grid {
    grid-auto-columns: 100%;
    grid-template-rows: 55% 45%;
    -ms-grid-columns: 100%;
  }
}

/* on thin AND SHORT window (mobile portrait w/ soft keyboard up), only 1 row visible at a time */
@media screen and (max-width: 600px) and (max-height: 500px) { /* make max-height smaller? */
  #content-grid {
    grid-template-rows: 100% 100%;
    -ms-grid-rows: 100% 100%;
  }
}


/* sizing elements */

/* on thin window, shrink some elements */
@media screen and (max-width: 600px) {
  h2 {
    margin-top: .5em;
    margin-bottom: .5em;
  }

  .bottom-bar {
    padding: .5em 1em;
  }
}

/* on even thinner window, shrink some more elements */
@media screen and (max-width: 400px) {
  h1 {
    font-size: 1.6em;
  }

  h2 {
    font-size: 1.4em;
  }
}

/* on short window, shrink some elements */
@media screen and (max-height: 350px) {
  h1 {
    font-size: 1.4em;
  }

  #menu-logo {
    font-size: 2em;
  }

  h2 {
    font-size: 1.25em;
    margin-top: .4em;
    margin-bottom: .4em;
  }

  .bottom-bar {
    padding: .5em 1em;
  }
}

/* on VERY short window (mobile landscape w/ soft keyboard up), app must be taller than full-screen */
@media screen and (max-height: 170px) {
  html {
    height: calc(var(--vh, 1vh) * 230);
  }
}


